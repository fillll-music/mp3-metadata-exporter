name: Build and Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Debug environment
      run: |
        node --version
        npm --version
        ls -la
        ls -la build/
        
    - name: Run tests (if available)
      run: npm test --if-present
      
    - name: Build application
      run: npm run dist
      env:
        # Required for Windows code signing
        WIN_CSC_LINK: ${{ secrets.WIN_CSC_LINK }}
        WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        # GitHub token for publishing
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Debug build output
      run: |
        echo "Build completed, checking dist directory:"
        ls -la dist/ || echo "No dist directory found"
        find dist -name "*.exe" -o -name "*.dmg" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.zip" || echo "No build artifacts found"
      
    - name: Upload artifacts (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: linux-builds
        path: |
          dist/*.AppImage
          dist/*.deb
          
    - name: Upload artifacts (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: windows-builds
        path: |
          dist/*.exe
          dist/*.zip
          
  # Optional: Create a release when a tag is pushed
  release:
    if: github.event_name == 'release'
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist-artifacts
        
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist-artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
